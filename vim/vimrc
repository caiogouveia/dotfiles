" ====================================================================
" VIM CONFIGURATION - Optimized & Refactored
" ====================================================================

" PLUGINS
" ====================================================================
call plug#begin('~/.vim/plugged')

" Core functionality
Plug 'github/copilot.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'mhinz/vim-startify'

" UI & Visual
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'bagrat/vim-buffet'
Plug 'ryanoasis/vim-devicons'

" Language Support & Completion
Plug 'neoclide/coc.nvim', {'branch': 'release'}
let g:coc_global_extensions = [
  \ 'coc-emmet', 'coc-css', 'coc-html', 'coc-json', 
  \ 'coc-prettier', 'coc-tsserver', 'coc-eslint'
  \ ]

" JavaScript/TypeScript
Plug 'tpope/vim-commentary'
Plug 'yuezk/vim-js'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'jiangmiao/auto-pairs'
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'
Plug 'styled-components/vim-styled-components'

" CSS/SCSS
Plug 'JulesWang/css.vim'
Plug 'cakebaker/scss-syntax.vim'

" Themes
Plug 'tomasiser/vim-code-dark'
Plug 'arcticicestudio/nord-vim'
Plug 'jpo/vim-railscasts-theme'

call plug#end()

" BASIC SETTINGS
" ====================================================================
set nocompatible                 " Disable Vi compatibility
set encoding=utf-8               " Set encoding
set backspace=indent,eol,start   " Allow backspace over everything
set hidden                       " Allow switching buffers without saving

" Performance
set ttyfast                      " Faster redrawing
set lazyredraw                   " Don't redraw during macros
set updatetime=250               " Faster updates

" Files & Backups
set nobackup
set nowritebackup
set noswapfile

" Search
set ignorecase                   " Case insensitive search
set smartcase                    " Case sensitive if uppercase present
set hlsearch                     " Highlight search results
set incsearch                    " Incremental search

" Indentation
set expandtab                    " Use spaces instead of tabs
set tabstop=2                    " Tab width
set shiftwidth=2                 " Indentation width
set smartindent                  " Smart indenting
set autoindent                   " Auto indenting

" UI
set number                       " Show line numbers
set relativenumber               " Relative line numbers
set cursorline                   " Highlight current line
set ruler                        " Show cursor position
set showcmd                      " Show incomplete commands
set wildmenu                     " Enhanced command completion
set wildmode=list:longest        " Complete files like shell
set laststatus=2                 " Always show status line
set showmatch                    " Show matching brackets
set colorcolumn=80,120           " Show column guides

" Splits
set splitright                   " Vertical splits to the right
set splitbelow                   " Horizontal splits below
set fillchars+=vert:│            " Better split separator

" Mouse & Clipboard
set mouse=a                      " Enable mouse support
set clipboard=unnamed            " Use system clipboard

" Folding (disabled by default)
set nofoldenable

" THEME & COLORS
" ====================================================================
syntax enable
colorscheme codedark

" Custom highlights
highlight ColorColumn ctermbg=darkgray guibg=#2d2d2d
highlight clear SignColumn

" PLUGIN CONFIGURATIONS
" ====================================================================

" CtrlP - File finder
let g:ctrlp_map = '<C-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](node_modules|\.git|\.hg|\.svn|dist|build|coverage|__pycache__)$',
  \ 'file': '\v\.(exe|so|dll|pyc|pyo|swp|swo)$'
  \ }
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_max_files = 10000

" NERDTree - File explorer
let g:NERDTreeShowHidden = 1
let g:NERDTreeMinimalUI = 1
let g:NERDTreeIgnore = ['node_modules$', '\.git$', '\.DS_Store$']
let g:NERDTreeStatusline = ''
let g:NERDTreeWinSize = 35

" Airline - Status line
let g:airline_theme = 'codedark'
let g:airline_powerline_fonts = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#hunks#enabled = 1

" Simplify airline sections
function! AirlineInit()
  let g:airline_section_c = '%t'  " Just filename
  let g:airline_section_y = ''    " Remove file encoding
  let g:airline_section_z = '%l:%c' " Line:column only
endfunction
autocmd VimEnter * call AirlineInit()

" Git Gutter
let g:gitgutter_max_signs = 500
let g:gitgutter_map_keys = 0
let g:gitgutter_override_sign_column_highlight = 0
highlight GitGutterAdd    ctermfg=green  guifg=#00ff00
highlight GitGutterChange ctermfg=yellow guifg=#ffff00
highlight GitGutterDelete ctermfg=red    guifg=#ff0000

" CoC - Completion
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Auto-pairs - Smart bracket matching
let g:AutoPairsMultilineClose = 0

" KEYBINDINGS
" ====================================================================

" Leader key (keep default)
" let mapleader = ","

" Disable Ex mode
map Q <Nop>

" Quick save and quit
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>wq :wq<CR>

" Navigation between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Move splits
nnoremap <A-h> <C-W>H
nnoremap <A-j> <C-W>J
nnoremap <A-k> <C-W>K
nnoremap <A-l> <C-W>L

" Buffer navigation
nnoremap <leader>bn :bnext<CR>
nnoremap <leader>bp :bprevious<CR>
nnoremap <leader>bd :bdelete<CR>

" Toggle plugins
nnoremap <C-b> :NERDTreeToggle<CR>
nnoremap <leader>ff :CtrlP<CR>
nnoremap <leader>fb :CtrlPBuffer<CR>

" Clear search highlighting
nnoremap <leader>/ :nohlsearch<CR>

" Terminal
nnoremap <C-n> :call OpenTerminal()<CR>
tnoremap <Esc> <C-\><C-n>

" Quick edit vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

" FUNCTIONS
" ====================================================================

" Open terminal in split
function! OpenTerminal()
  split term://zsh
  resize 15
  startinsert
endfunction

" Auto-start insert mode in terminal
augroup TerminalSettings
  autocmd!
  autocmd BufEnter * if &buftype == 'terminal' | :startinsert | endif
augroup END

" AUTOCOMMANDS
" ====================================================================

augroup FileTypeSettings
  autocmd!
  " Remove trailing whitespace on save
  autocmd BufWritePre * :%s/\s\+$//e
  
  " Set specific settings for different file types
  autocmd FileType javascript,typescript,json setlocal ts=2 sw=2 sts=2
  autocmd FileType html,css,scss setlocal ts=2 sw=2 sts=2
  autocmd FileType python setlocal ts=4 sw=4 sts=4
  
  " Auto-format on save for supported languages
  autocmd BufWritePre *.js,*.ts,*.json :CocCommand prettier.formatFile
augroup END

" COMMAND ALIASES
" ====================================================================
command! W w
command! Q q
command! Wq wq
command! WQ wq

" VISUAL ENHANCEMENTS
" ====================================================================

" Show invisible characters
set list
set listchars=tab:▸\ ,trail:⋅,extends:❯,precedes:❮,nbsp:⋅

" Better display for messages
set cmdheight=2

" Don't show mode in command line (airline shows it)
set noshowmode

" PERFORMANCE OPTIMIZATIONS
" ====================================================================

" Limit syntax highlighting for long lines
set synmaxcol=200

" Faster scrolling
set scrolljump=5

" Reduce timeout for mapped sequences
set timeoutlen=500
set ttimeoutlen=50

" ====================================================================
" END OF CONFIGURATION
" ====================================================================
